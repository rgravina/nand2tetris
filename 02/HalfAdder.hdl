/**
 * Computes the sum of two bits.
 */

CHIP HalfAdder {
  IN a, b;    // 1-bit inputs
  OUT sum,    // Right bit of a + b 
      carry;  // Left bit of a + b

  PARTS:
  // sum(a,b) happs to be just like Xor(a,b)
  // i.e. the answer is 1 when they are different
  Xor(a=a, b=b, out=sum);
  // this is because of the carry bit. If a and b
  // are both 1, then there is a carry.
  // So, And(a,b) implements carry.
  And(a=a, b=b, out=carry);
}
