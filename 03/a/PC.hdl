/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
  IN in[16],load,inc,reset;
  OUT out[16];

  PARTS:
  // Inc
  // Take the result of what is in the register and add one
  Inc16(in=regout, out=outplusone);
  Mux16(a=regout, b=outplusone, sel=inc, out=inced);

  // Load
  // We can load over the inc, that's fine
  Mux16(a=inced, b=in, sel=load, out=loaded);

  // Reset
  // Reset the value to zero if set, regardless of what was already done
  Mux16(a=loaded, b=false, sel=reset, out=reseted);

  // Store the new value if inc or load or reset
  Or(a=inc, b=load, out=incorload);
  Or(a=incorload, b=reset, out=bitset);
  Register(in=reseted, load=bitset, out=regout);

  // Send the value out
  Or16(a=regout, b=false, out=out);
}
