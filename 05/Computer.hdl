// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {
  IN reset;

  PARTS:
  // The program ROM
  ROM32K(address=pc, out=instruction);

  // The CPU
  CPU(inM=data-memory-out, instruction=instruction, reset=reset, outM=outM, writeM=writeM, addressM=addressM, pc=pc);

  // Select which RAM to use
  Or16(a[0..14]=addressM, b=false, out[14]=topmost-address-bit);
  DMux(in=writeM, sel=topmost-address-bit, a=lower-ram, b=upper-ram);

  // The data memory
  Or16(a[0..14]=addressM, b=false, out[0..13]=lower-address);
  Or16(a[0..14]=addressM, b=false, out[1..14]=upper-address);

  RAM16K(in=outM, load=lower-ram, address=lower-address, out=data-memory-out0);
  RAM16K(in=outM, load=upper-ram, address=upper-address, out=data-memory-out1);

  Or16(a=data-memory-out0, b=data-memory-out1, out=data-memory-out);
}
